{"version":3,"sources":["Header/Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","firebase.js","EmailList.js","SendMail.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","className","IconButton","src","alt","type","placeholder","Avatar","SidebarOption","title","number","Icon","selected","mailSlice","createSlice","name","initialState","sendMessageIsOpen","reducers","openSendMessage","state","closeSendMessage","actions","selectsendMessageIsOpen","mail","Sidebar","dispatch","useDispatch","Button","startIcon","fontSize","onClick","InboxIcon","StarIcon","WatchLaterSharpIcon","SendSharpIcon","InsertDriveFileIcon","KeyboardArrowDownIcon","Mail","history","useHistory","push","Section","color","style","borderBottom","EmailRow","id","subject","description","time","Checkbox","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","GoogleAuthProvider","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","console","log","PeopleIcon","LocalOfferIcon","timestamp","to","message","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","onSubmit","formData","add","FieldValue","serverTimestamp","ref","required","App","useSelector","path","configureStore","reducer","mailReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35c71da5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport {Avatar , IconButton} from '@material-ui/core';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <IconButton>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <img src=\"https://www.logo.wine/a/logo/Gmail/Gmail-Logo.wine.svg\" alt=\"gmail-logo\" />\r\n            </div>\r\n            <div className=\"header__middle\">\r\n                <SearchIcon />\r\n                <input type=\"text\" placeholder=\"search mail\" />\r\n                <ArrowDropDownIcon  className=\"header__inputCaret\" />\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsActiveIcon />\r\n                </IconButton>\r\n                <Avatar />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './SidebarOption.css';\r\n\r\nfunction SidebarOption({title, number,Icon, selected  }) {\r\n    return (\r\n        <div className={`sidebarOption ${selected && \"sidebarOption__active\"}`}>\r\n            <Icon />\r\n            <h3>{title}</h3>\r\n            <p> {number} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const mailSlice = createSlice({\r\n  name: 'mail',\r\n  initialState: {\r\n    sendMessageIsOpen : false,\r\n  },\r\n  reducers: {\r\n   openSendMessage: state => {\r\n      state.sendMessageIsOpen= true;\r\n    },\r\n    closeSendMessage: state => {\r\n      state.sendMessageIsOpen= false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {openSendMessage, closeSendMessage } = mailSlice.actions;\r\n\r\n\r\nexport const selectsendMessageIsOpen =(state) => state.mail.sendMessageIsOpen;\r\n\r\nexport default mailSlice.reducer;\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport SidebarOption from './SidebarOption';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport WatchLaterSharpIcon from '@material-ui/icons/WatchLaterSharp';\r\nimport SendSharpIcon from '@material-ui/icons/SendSharp';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport {useDispatch} from 'react-redux';\r\nimport { openSendMessage } from './features/mailSlice';\r\n\r\nfunction Sidebar() {\r\n\r\n    const dispatch= useDispatch();\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Button startIcon={<AddIcon fontSize=\"large\" />} className=\"sidebar__compose\" onClick={()=>dispatch(openSendMessage())} > Compose </Button>\r\n            <SidebarOption Icon={ InboxIcon} title=\"Inbox\" number={18} selected={true} />\r\n            <SidebarOption Icon={ StarIcon} title=\"Starred\" number={17} />\r\n            <SidebarOption Icon={ WatchLaterSharpIcon} title=\"Snoozed\" number={7} />\r\n            <SidebarOption Icon={ SendSharpIcon} title=\"Sent\" number={17} />\r\n            <SidebarOption Icon={ InsertDriveFileIcon} title=\"Drafts\" number={17} />\r\n            <SidebarOption Icon={ KeyboardArrowDownIcon} title=\"More\" />\r\n\r\n            <div className=\"sidebar__footer\">\r\n                <div className=\"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import { IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Mail.css';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nfunction Mail() {\r\n    const history= useHistory();\r\n    return (\r\n        <div className=\"mail\">\r\n            <div className=\"mail__tools\">\r\n                <div className=\"mail__toolsLeft\">\r\n                    <IconButton onClick={()=> history.push(\"/\")  }>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoveToInboxIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <EmailIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <WatchLaterIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <CheckCircleIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <LabelImportantIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <div className=\"mail__toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMoreIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PrintIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ExitToAppIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mail__body\">\r\n                <div className=\"mail__bodyHeader\">\r\n                    <h2> Gmail Build</h2>\r\n                    <LabelImportantIcon className=\"mail__importantIcon\" />\r\n                    <p> Your Gmail clone </p>\r\n                    <p className=\"mail__time\" >7:30 PM</p>\r\n                </div>\r\n                <div className=\"mail__message\">\r\n                    <p> This Gmail build just giving me very much confidance\r\n                         This Gmail build just giving me very much confidance \r\n                         This Gmail build just giving me very much confidance  </p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail;\r\n","import React from 'react';\r\nimport './Section.css';\r\n\r\nfunction Section({Icon, title, selected,color}) {\r\n    return (\r\n        <div className={`section  ${selected && \"section__selected\"}`}\r\n        style={{\r\n            borderBottom:`1px solid ${color}`,\r\n            color:`${selected &&color}`\r\n        }}\r\n        >\r\n            <Icon />\r\n            <h4> {title} </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport './EmailRow.css';\r\n\r\nimport { Checkbox } from '@material-ui/core';\r\nimport {IconButton} from '@material-ui/core';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction EmailRow( { id, subject,title,description,time } ) {\r\n\r\n    const history= useHistory();\r\n\r\n    return (\r\n        <div onClick={()=> history.push(\"/mail\") } className=\"emailRow\">\r\n            <div className=\"emailRow__options\">\r\n                <Checkbox />\r\n                <IconButton>\r\n                    <StarBorderOutlinedIcon />          \r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon />\r\n                </IconButton>\r\n            </div>\r\n            <h3 className=\"emailRow__title\">\r\n                {title}\r\n            </h3>\r\n            <div className=\"emailRow__message\">\r\n                <h4>\r\n                    {subject} {\" \"}\r\n                    <span className=\"emailRow__description\"> -\r\n                        {description}\r\n                    </span>\r\n                </h4>\r\n            </div>\r\n            <div className=\"emailRow__time\">\r\n                {time}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailRow;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAx0xBlbYPfsL-oqW8UBHBoHlFsK-bmD-o\",\r\n  authDomain: \"fir-e3b99.firebaseapp.com\",\r\n  projectId: \"fir-e3b99\",\r\n  storageBucket: \"fir-e3b99.appspot.com\",\r\n  messagingSenderId: \"169055125581\",\r\n  appId: \"1:169055125581:web:7256130bdf327a5db71c04\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig); \r\nconst db=firebaseApp.firestore();\r\n\r\nconst auth= firebase.auth();\r\nconst provider=  new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {db, auth, provider};","import React, { useEffect, useState } from 'react';\r\nimport './EmailList.css';\r\n\r\nimport {Checkbox, IconButton} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport Section from './Section';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\n\r\nimport EmailRow from './EmailRow';\r\nimport { db } from './firebase';\r\n\r\nfunction EmailList() {\r\n\r\n    const [emails, setEmails]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        db.collection(\"emails\")\r\n        .orderBy('timestamp',\"desc\")\r\n        .onSnapshot((snapshot)=>\r\n        setEmails(\r\n            snapshot.docs.map((doc)=>({\r\n                id:doc.id,\r\n                data:doc.data(),\r\n            }))\r\n        ),\r\n        console.log(emails)\r\n        );\r\n    }, []);\r\n        \r\n\r\n    return (\r\n        <div className=\"emailList\">\r\n            <div className=\"emailList__settings\">\r\n                <div className=\"emailList__settingsLeft\">\r\n                    <Checkbox />\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className=\"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"emailList__sections\">\r\n                <Section Icon={InboxIcon} title=\"primary\" color=\"red\" selected />\r\n                <Section Icon={PeopleIcon} title=\"social\" color=\"#1A73E8\"  />\r\n                <Section Icon={LocalOfferIcon} title=\"promotions\" color=\"green\"  />\r\n            </div>\r\n\r\n            <div className=\"emailList__list\">\r\n                {emails.map(({id, data:{to, subject, message, timestamp}}) =>{\r\n                    <EmailRow \r\n                        id={id}\r\n                        key={id}\r\n                        title={to}\r\n                        subject={subject}\r\n                        description={message}\r\n                        time={ new Date(timestamp?.seconds*1000).toUTCString() }\r\n                    \r\n                    />\r\n                })}\r\n                <EmailRow\r\n                    title=\"Developer\"\r\n                    subject=\"About the gmail clone\"\r\n                    description=\"This clone is amazing , i am working on this clone since today 3 pm \"\r\n                    time=\"3:00 AM\"\r\n                />\r\n\r\n               \r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailList\r\n","import React from 'react';\r\nimport './SendMail.css';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport {useForm}from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice';\r\nimport {db} from './firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction SendMail() {\r\n\r\n    const {register, handleSubmit, watch, errors}  = useForm();\r\n    const dispatch= useDispatch();\r\n\r\n    const onSubmit=(formData)=>{\r\n        console.log(formData);\r\n        db.collection('emails').add({\r\n            to: formData.to,\r\n            subject:formData.subject,\r\n            message: formData.message,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        dispatch(closeSendMessage());\r\n    }\r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail__header\">\r\n                <h3> New Message</h3>\r\n                <CloseIcon className=\"sendMail__close\" onClick={()=> dispatch(closeSendMessage()) } />\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input  name=\"to\" placeholder=\"To:\" type=\"email\" ref={register({required:true})} />\r\n                {errors.to&& <p> To is required </p> }\r\n                 <input name=\"subject\"  placeholder=\"Subject\" type=\"text\"  ref={register({required:true})} />\r\n                 {errors.subject&& <p> subject is required </p> }\r\n                  <input  name=\"message\" className=\"sendMail__message\" placeholder=\"Message ...\" type=\"text\"  ref={register({required:true})} />\r\n                    {errors.message&& <p> message is required </p> }\r\n                  <div className=\"sendMail__options\">\r\n                      <button className=\"sendMail__send\" >Send</button>\r\n                  </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMail;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './Header/Header'\r\nimport Sidebar from './Sidebar';\r\n\r\nimport {BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\nimport Mail from './Mail';\r\nimport EmailList from './EmailList';\r\n\r\nimport SendMail from './SendMail';\r\nimport {useSelector} from \"react-redux\";\r\nimport { selectsendMessageIsOpen } from './features/mailSlice';\r\n\r\nfunction App() {\r\n\r\n  const sendMessageIsOpen= useSelector(selectsendMessageIsOpen);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n      <Header />\r\n      <div className=\"app__body\">\r\n        <Sidebar />\r\n        <Switch>\r\n          <Route path=\"/mail\">\r\n            <Mail />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <EmailList />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      {sendMessageIsOpen && <SendMail />}\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}